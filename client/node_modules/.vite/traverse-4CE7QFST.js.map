{
  "version": 3,
  "sources": ["../traverse/index.js"],
  "sourcesContent": ["'use strict';\n\n// TODO: use call-bind, is-date, is-regex, is-string, is-boolean-object, is-number-object\nfunction toS(obj) { return Object.prototype.toString.call(obj); }\nfunction isDate(obj) { return toS(obj) === '[object Date]'; }\nfunction isRegExp(obj) { return toS(obj) === '[object RegExp]'; }\nfunction isError(obj) { return toS(obj) === '[object Error]'; }\nfunction isBoolean(obj) { return toS(obj) === '[object Boolean]'; }\nfunction isNumber(obj) { return toS(obj) === '[object Number]'; }\nfunction isString(obj) { return toS(obj) === '[object String]'; }\n\n// TODO: use isarray\nvar isArray = Array.isArray || function isArray(xs) {\n\treturn Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n// TODO: use for-each?\nfunction forEach(xs, fn) {\n\tif (xs.forEach) { return xs.forEach(fn); }\n\tfor (var i = 0; i < xs.length; i++) {\n\t\tfn(xs[i], i, xs);\n\t}\n\treturn void undefined;\n}\n\n// TODO: use object-keys\nvar objectKeys = Object.keys || function keys(obj) {\n\tvar res = [];\n\tfor (var key in obj) { res.push(key); } // eslint-disable-line no-restricted-syntax\n\treturn res;\n};\n\n// TODO: use object.hasown\nvar hasOwnProperty = Object.prototype.hasOwnProperty || function (obj, key) {\n\treturn key in obj;\n};\n\nfunction copy(src) {\n\tif (typeof src === 'object' && src !== null) {\n\t\tvar dst;\n\n\t\tif (isArray(src)) {\n\t\t\tdst = [];\n\t\t} else if (isDate(src)) {\n\t\t\tdst = new Date(src.getTime ? src.getTime() : src);\n\t\t} else if (isRegExp(src)) {\n\t\t\tdst = new RegExp(src);\n\t\t} else if (isError(src)) {\n\t\t\tdst = { message: src.message };\n\t\t} else if (isBoolean(src) || isNumber(src) || isString(src)) {\n\t\t\tdst = Object(src);\n\t\t} else if (Object.create && Object.getPrototypeOf) {\n\t\t\tdst = Object.create(Object.getPrototypeOf(src));\n\t\t} else if (src.constructor === Object) {\n\t\t\tdst = {};\n\t\t} else {\n\t\t\tvar proto = (src.constructor && src.constructor.prototype)\n                || src.__proto__\n                || {};\n\t\t\tvar T = function T() {}; // eslint-disable-line func-style, func-name-matching\n\t\t\tT.prototype = proto;\n\t\t\tdst = new T();\n\t\t}\n\n\t\tforEach(objectKeys(src), function (key) {\n\t\t\tdst[key] = src[key];\n\t\t});\n\t\treturn dst;\n\t}\n\treturn src;\n}\n\nfunction walk(root, cb, immutable) {\n\tvar path = [];\n\tvar parents = [];\n\tvar alive = true;\n\n\treturn (function walker(node_) {\n\t\tvar node = immutable ? copy(node_) : node_;\n\t\tvar modifiers = {};\n\n\t\tvar keepGoing = true;\n\n\t\tvar state = {\n\t\t\tnode: node,\n\t\t\tnode_: node_,\n\t\t\tpath: [].concat(path),\n\t\t\tparent: parents[parents.length - 1],\n\t\t\tparents: parents,\n\t\t\tkey: path[path.length - 1],\n\t\t\tisRoot: path.length === 0,\n\t\t\tlevel: path.length,\n\t\t\tcircular: null,\n\t\t\tupdate: function (x, stopHere) {\n\t\t\t\tif (!state.isRoot) {\n\t\t\t\t\tstate.parent.node[state.key] = x;\n\t\t\t\t}\n\t\t\t\tstate.node = x;\n\t\t\t\tif (stopHere) { keepGoing = false; }\n\t\t\t},\n\t\t\tdelete: function (stopHere) {\n\t\t\t\tdelete state.parent.node[state.key];\n\t\t\t\tif (stopHere) { keepGoing = false; }\n\t\t\t},\n\t\t\tremove: function (stopHere) {\n\t\t\t\tif (isArray(state.parent.node)) {\n\t\t\t\t\tstate.parent.node.splice(state.key, 1);\n\t\t\t\t} else {\n\t\t\t\t\tdelete state.parent.node[state.key];\n\t\t\t\t}\n\t\t\t\tif (stopHere) { keepGoing = false; }\n\t\t\t},\n\t\t\tkeys: null,\n\t\t\tbefore: function (f) { modifiers.before = f; },\n\t\t\tafter: function (f) { modifiers.after = f; },\n\t\t\tpre: function (f) { modifiers.pre = f; },\n\t\t\tpost: function (f) { modifiers.post = f; },\n\t\t\tstop: function () { alive = false; },\n\t\t\tblock: function () { keepGoing = false; },\n\t\t};\n\n\t\tif (!alive) { return state; }\n\n\t\tfunction updateState() {\n\t\t\tif (typeof state.node === 'object' && state.node !== null) {\n\t\t\t\tif (!state.keys || state.node_ !== state.node) {\n\t\t\t\t\tstate.keys = objectKeys(state.node);\n\t\t\t\t}\n\n\t\t\t\tstate.isLeaf = state.keys.length === 0;\n\n\t\t\t\tfor (var i = 0; i < parents.length; i++) {\n\t\t\t\t\tif (parents[i].node_ === node_) {\n\t\t\t\t\t\tstate.circular = parents[i];\n\t\t\t\t\t\tbreak; // eslint-disable-line no-restricted-syntax\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstate.isLeaf = true;\n\t\t\t\tstate.keys = null;\n\t\t\t}\n\n\t\t\tstate.notLeaf = !state.isLeaf;\n\t\t\tstate.notRoot = !state.isRoot;\n\t\t}\n\n\t\tupdateState();\n\n\t\t// use return values to update if defined\n\t\tvar ret = cb.call(state, state.node);\n\t\tif (ret !== undefined && state.update) { state.update(ret); }\n\n\t\tif (modifiers.before) { modifiers.before.call(state, state.node); }\n\n\t\tif (!keepGoing) { return state; }\n\n\t\tif (\n\t\t\ttypeof state.node === 'object'\n\t\t\t&& state.node !== null\n\t\t\t&& !state.circular\n\t\t) {\n\t\t\tparents.push(state);\n\n\t\t\tupdateState();\n\n\t\t\tforEach(state.keys, function (key, i) {\n\t\t\t\tpath.push(key);\n\n\t\t\t\tif (modifiers.pre) { modifiers.pre.call(state, state.node[key], key); }\n\n\t\t\t\tvar child = walker(state.node[key]);\n\t\t\t\tif (immutable && hasOwnProperty.call(state.node, key)) {\n\t\t\t\t\tstate.node[key] = child.node;\n\t\t\t\t}\n\n\t\t\t\tchild.isLast = i === state.keys.length - 1;\n\t\t\t\tchild.isFirst = i === 0;\n\n\t\t\t\tif (modifiers.post) { modifiers.post.call(state, child); }\n\n\t\t\t\tpath.pop();\n\t\t\t});\n\t\t\tparents.pop();\n\t\t}\n\n\t\tif (modifiers.after) { modifiers.after.call(state, state.node); }\n\n\t\treturn state;\n\t}(root)).node;\n}\n\nfunction Traverse(obj) {\n\tthis.value = obj;\n}\n\nTraverse.prototype.get = function (ps) {\n\tvar node = this.value;\n\tfor (var i = 0; i < ps.length; i++) {\n\t\tvar key = ps[i];\n\t\tif (!node || !hasOwnProperty.call(node, key)) {\n\t\t\treturn void undefined;\n\t\t}\n\t\tnode = node[key];\n\t}\n\treturn node;\n};\n\nTraverse.prototype.has = function (ps) {\n\tvar node = this.value;\n\tfor (var i = 0; i < ps.length; i++) {\n\t\tvar key = ps[i];\n\t\tif (!node || !hasOwnProperty.call(node, key)) {\n\t\t\treturn false;\n\t\t}\n\t\tnode = node[key];\n\t}\n\treturn true;\n};\n\nTraverse.prototype.set = function (ps, value) {\n\tvar node = this.value;\n\tfor (var i = 0; i < ps.length - 1; i++) {\n\t\tvar key = ps[i];\n\t\tif (!hasOwnProperty.call(node, key)) { node[key] = {}; }\n\t\tnode = node[key];\n\t}\n\tnode[ps[i]] = value;\n\treturn value;\n};\n\nTraverse.prototype.map = function (cb) {\n\treturn walk(this.value, cb, true);\n};\n\nTraverse.prototype.forEach = function (cb) {\n\tthis.value = walk(this.value, cb, false);\n\treturn this.value;\n};\n\nTraverse.prototype.reduce = function (cb, init) {\n\tvar skip = arguments.length === 1;\n\tvar acc = skip ? this.value : init;\n\tthis.forEach(function (x) {\n\t\tif (!this.isRoot || !skip) {\n\t\t\tacc = cb.call(this, acc, x);\n\t\t}\n\t});\n\treturn acc;\n};\n\nTraverse.prototype.paths = function () {\n\tvar acc = [];\n\tthis.forEach(function () {\n\t\tacc.push(this.path);\n\t});\n\treturn acc;\n};\n\nTraverse.prototype.nodes = function () {\n\tvar acc = [];\n\tthis.forEach(function () {\n\t\tacc.push(this.node);\n\t});\n\treturn acc;\n};\n\nTraverse.prototype.clone = function () {\n\tvar parents = [];\n\tvar nodes = [];\n\n\treturn (function clone(src) {\n\t\tfor (var i = 0; i < parents.length; i++) {\n\t\t\tif (parents[i] === src) {\n\t\t\t\treturn nodes[i];\n\t\t\t}\n\t\t}\n\n\t\tif (typeof src === 'object' && src !== null) {\n\t\t\tvar dst = copy(src);\n\n\t\t\tparents.push(src);\n\t\t\tnodes.push(dst);\n\n\t\t\tforEach(objectKeys(src), function (key) {\n\t\t\t\tdst[key] = clone(src[key]);\n\t\t\t});\n\n\t\t\tparents.pop();\n\t\t\tnodes.pop();\n\t\t\treturn dst;\n\t\t}\n\n\t\treturn src;\n\n\t}(this.value));\n};\n\nfunction traverse(obj) {\n\treturn new Traverse(obj);\n}\n\n// TODO: replace with object.assign?\nforEach(objectKeys(Traverse.prototype), function (key) {\n\ttraverse[key] = function (obj) {\n\t\tvar args = [].slice.call(arguments, 1);\n\t\tvar t = new Traverse(obj);\n\t\treturn t[key].apply(t, args);\n\t};\n});\n\nmodule.exports = traverse;\n"],
  "mappings": "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",
  "names": []
}
